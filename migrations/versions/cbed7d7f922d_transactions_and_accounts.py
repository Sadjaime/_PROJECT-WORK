"""Transactions and Accounts

Revision ID: cbed7d7f922d
Revises: e94b825c0585
Create Date: 2025-10-11 01:38:08.281212

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cbed7d7f922d'
down_revision: Union[str, Sequence[str], None] = 'e94b825c0585'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('type', sa.Text(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Text(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('account_stocks')
    op.add_column('accounts', sa.Column('user_id', sa.Integer(), nullable=False))
    op.drop_constraint(op.f('accounts_email_key'), 'accounts', type_='unique')
    op.create_foreign_key(None, 'accounts', 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_column('accounts', 'is_admin')
    op.drop_column('accounts', 'email')
    op.drop_column('accounts', 'password')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('accounts', sa.Column('password', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('accounts', sa.Column('email', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('accounts', sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'accounts', type_='foreignkey')
    op.create_unique_constraint(op.f('accounts_email_key'), 'accounts', ['email'], postgresql_nulls_not_distinct=False)
    op.drop_column('accounts', 'user_id')
    op.create_table('account_stocks',
    sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name=op.f('account_stocks_account_id_fkey'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], name=op.f('account_stocks_stock_id_fkey'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('account_id', name=op.f('account_stocks_pkey'))
    )
    op.drop_table('transactions')
    op.drop_table('users')
    # ### end Alembic commands ###
