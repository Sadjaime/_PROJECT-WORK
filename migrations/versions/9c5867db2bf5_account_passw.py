"""Account passw

Revision ID: 9c5867db2bf5
Revises: 7e8c89ce6464
Create Date: 2025-10-10 11:59:23.266596

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9c5867db2bf5'
down_revision: Union[str, Sequence[str], None] = '7e8c89ce6464'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('account_stocks_account_id_fkey'), 'account_stocks', type_='foreignkey')
    op.drop_constraint(op.f('account_stocks_stock_id_fkey'), 'account_stocks', type_='foreignkey')
    op.create_foreign_key(None, 'account_stocks', 'stocks', ['stock_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'account_stocks', 'accounts', ['account_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.add_column('accounts', sa.Column('password', sa.Text(), nullable=False))
    op.alter_column('accounts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('accounts', 'pin')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('accounts', sa.Column('pin', sa.INTEGER(), autoincrement=False, nullable=False))
    op.alter_column('accounts', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('accounts', 'password')
    op.drop_constraint(None, 'account_stocks', type_='foreignkey')
    op.drop_constraint(None, 'account_stocks', type_='foreignkey')
    op.create_foreign_key(op.f('account_stocks_stock_id_fkey'), 'account_stocks', 'stocks', ['stock_id'], ['id'])
    op.create_foreign_key(op.f('account_stocks_account_id_fkey'), 'account_stocks', 'accounts', ['account_id'], ['id'])
    # ### end Alembic commands ###
