"""init def

Revision ID: 114cc6c9424b
Revises: 2aad73b43c80
Create Date: 2025-10-12 12:02:06.856261

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '114cc6c9424b'
down_revision: Union[str, Sequence[str], None] = '2aad73b43c80'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('positions', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.create_unique_constraint('unique_account_stock', 'positions', ['account_id', 'stock_id'])
    op.add_column('stocks', sa.Column('symbol', sa.Text(), nullable=True))
    op.add_column('stocks', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('stocks', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.create_index(op.f('ix_stocks_name'), 'stocks', ['name'], unique=True)
    op.create_index(op.f('ix_stocks_symbol'), 'stocks', ['symbol'], unique=True)
    op.add_column('trades', sa.Column('amount', sa.Float(), nullable=False))
    op.add_column('trades', sa.Column('description', sa.Text(), nullable=True))
    op.alter_column('trades', 'stock_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('trades', 'quantity',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('trades', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.drop_constraint(op.f('trades_account_id_fkey'), 'trades', type_='foreignkey')
    op.drop_constraint(op.f('trades_stock_id_fkey'), 'trades', type_='foreignkey')
    op.create_foreign_key(None, 'trades', 'accounts', ['account_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'trades', 'stocks', ['stock_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(None, 'trades', type_='foreignkey')
    op.drop_constraint(None, 'trades', type_='foreignkey')
    op.create_foreign_key(op.f('trades_stock_id_fkey'), 'trades', 'stocks', ['stock_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('trades_account_id_fkey'), 'trades', 'accounts', ['account_id'], ['id'], ondelete='CASCADE')
    op.alter_column('trades', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('trades', 'quantity',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('trades', 'stock_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('trades', 'description')
    op.drop_column('trades', 'amount')
    op.drop_index(op.f('ix_stocks_symbol'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_name'), table_name='stocks')
    op.drop_column('stocks', 'updated_at')
    op.drop_column('stocks', 'created_at')
    op.drop_column('stocks', 'symbol')
    op.drop_constraint('unique_account_stock', 'positions', type_='unique')
    op.drop_column('positions', 'created_at')
    # ### end Alembic commands ###
